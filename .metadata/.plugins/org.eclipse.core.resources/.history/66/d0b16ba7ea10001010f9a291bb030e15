/**********************************************************************************************************************
 * \file Cpu0_Main.c
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/
#include "Ifx_Types.h"
#include "IfxCpu.h"
#include "IfxScuWdt.h"

IFX_ALIGN(4) IfxCpu_syncEvent g_cpuSyncEvent = 0;

volatile Ifx_P *p_pin20 = (volatile Ifx_P *)0xF003B400u; /* IfxPort_reg.h */
volatile Ifx_P *p_pin33 = (volatile Ifx_P *)0xF003C100u; /* IfxPort_reg.h */
const int DELAY = 1000000;
void delay(int d)
{
    volatile int i = 0;

    for (i = 0; i < d; i++)
    {
        i++;
    }
}

void core0_main(void)
{
    IfxCpu_enableInterrupts();
    
    /* !!WATCHDOG0 AND SAFETY WATCHDOG ARE DISABLED HERE!!
     * Enable the watchdogs and service them periodically if it is required
     */
    IfxScuWdt_disableCpuWatchdog(IfxScuWdt_getCpuWatchdogPassword());
    IfxScuWdt_disableSafetyWatchdog(IfxScuWdt_getSafetyWatchdogPassword());
    
    /* Wait for CPU sync event */
    IfxCpu_emitEvent(&g_cpuSyncEvent);
    IfxCpu_waitEvent(&g_cpuSyncEvent, 1);

    /* BLUE LEDS - PORT 20, PINS 11 to 14 */
    p_pin20->IOCR8.B.PC11 = 0x10;
    p_pin20->IOCR12.B.PC12 = 0x10;
    p_pin20->IOCR12.B.PC13 = 0x10;
    p_pin20->IOCR12.B.PC14 = 0x10;
    p_pin20->OUT.B.P11 = 1;
    p_pin20->OUT.B.P12 = 1;
    p_pin20->OUT.B.P13 = 1;
    p_pin20->OUT.B.P14 = 1;

    /* GREEN LEDS - PORT 33, PINS 4 to 7 */
    p_pin33->IOCR4.B.PC4 = 0x10;
    p_pin33->IOCR4.B.PC5 = 0x10;
    p_pin33->IOCR4.B.PC6 = 0x10;
    p_pin33->IOCR4.B.PC7 = 0x10;
    p_pin33->OUT.B.P4 = 1;
    p_pin33->OUT.B.P5 = 1;
    p_pin33->OUT.B.P6 = 1;
    p_pin33->OUT.B.P7 = 1;

    while(1)
    {
        p_pin20->OUT.B.P11 = 1;
        delay(DELAY);
        p_pin20->OUT.B.P12 = 1;
        delay(DELAY);
        p_pin20->OUT.B.P13 = 1;
        delay(DELAY);
        p_pin20->OUT.B.P14 = 1;
        delay(DELAY);
        p_pin20->OUT.B.P11 = 0;
        delay(DELAY);
        p_pin20->OUT.B.P12 = 0;
        delay(DELAY);
        p_pin20->OUT.B.P13 = 0;
        delay(DELAY);
        p_pin20->OUT.B.P14 = 0;
        delay(DELAY);



    }
    
    /*
    while(1)
    {
        i++;
        if (i >= 1000)
        {
            i = 0;
        }
    }
    */
}
